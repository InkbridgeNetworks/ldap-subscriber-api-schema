{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "vzir83tvacnxe"
  },
  "info": {
    "title": "freeradius-request-response",
    "version": "1.0",
    "summary": "An extremely simple request/response API that implements multiple network protocols",
    "description": "This API is intended to be used as the backend for applications which need to send test packets.  This should be a test framework, a client, or something more complex such as a load simulator.",
    "contact": {
      "name": " Network RADIUS support",
      "url": "http://www.networkradius.com",
      "email": "support@networkradius.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/request/{protocol}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/protocol"
        }
      ],
      "post": {
        "summary": "",
        "operationId": "post-request-protocol",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "x-stoplight": {
                        "id": "8tump6eki183y"
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "x-stoplight": {
                            "id": "z3uk9ie26rja9"
                          },
                          "description": "Returned in asynchronous mode.  The ID of the request."
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/ResponsePacket",
                      "x-stoplight": {
                        "id": "fz1bd9izm0jwx"
                      },
                      "description": "Returned in synchronous mode.  The response we received."
                    },
                    {
                      "$ref": "#/components/schemas/ResponseError",
                      "x-stoplight": {
                        "id": "s4cebx28x33ry"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Initiate a new request with the given protocol.",
        "parameters": [
          {
            "$ref": "#/components/parameters/synchronous"
          },
          {
            "$ref": "#/components/parameters/timeout"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPacket"
              }
            }
          },
          "description": "The request packet to send"
        }
      }
    },
    "/request/{protocol}/id/{requestId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/protocol"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "requestId",
          "in": "path",
          "required": true,
          "description": "The asynchronous request ID"
        }
      ],
      "get": {
        "summary": "Retrieve an asychronous request",
        "tags": [],
        "responses": {},
        "operationId": "get-request-protocol-id-requestId",
        "description": "Retrieve the result of an asynchronous request."
      }
    }
  },
  "components": {
    "schemas": {
      "PortIp": {
        "title": "PacketHeader",
        "x-stoplight": {
          "id": "k5iclnmp3l40a"
        },
        "type": "object",
        "description": "An object describing a src or dst ip/port combination\n",
        "properties": {
          "ip": {
            "type": "string",
            "x-stoplight": {
              "id": "zcbgomt0rsbc5"
            }
          },
          "port": {
            "type": "integer",
            "x-stoplight": {
              "id": "dh4gykzg5s3mn"
            },
            "format": "int32",
            "example": 1812,
            "maximum": 65535,
            "minimum": 1
          }
        }
      },
      "PacketHeader": {
        "title": "PacketHeader",
        "x-stoplight": {
          "id": "wyl6k3csy312i"
        },
        "type": "object",
        "description": "An object describing fields in an IP packet header",
        "properties": {
          "src": {
            "$ref": "#/components/schemas/PortIp",
            "x-stoplight": {
              "id": "g0b4fc1uzqpju"
            },
            "description": "Source port/IP"
          },
          "dst": {
            "$ref": "#/components/schemas/PortIp",
            "x-stoplight": {
              "id": "knyblx9g7ebeo"
            },
            "description": "Destination port/ip"
          },
          "timestamp": {
            "type": "string",
            "x-stoplight": {
              "id": "v8nncw1j1lm64"
            },
            "description": "The time the response was received.  Not set for requests.",
            "format": "date-time",
            "example": "2024-04-03T20:06:22Z"
          }
        },
        "required": [
          "dst"
        ]
      },
      "PacketAttributes": {
        "title": "PacketAttributes",
        "x-stoplight": {
          "id": "2jiobclrfqsvx"
        },
        "type": "object",
        "description": "A JSON representation of a protocol packet.  May contain any attributes found in the protocol specific dictionary.\n\nhttps://github.com/FreeRADIUS/freeradius-server/tree/master/share/dictionary\n\nExample attributes below are for RADIUS.  Actual fields allowed are not limited to this Open API specification.  Multiple values may be provided as an array.",
        "properties": {
          "User-Name": {
            "type": "string",
            "x-stoplight": {
              "id": "7w1vz1nan2cnt"
            },
            "example": "bob",
            "description": "The RFC2865 attribute to identify a user: https://github.com/FreeRADIUS/freeradius-server/blob/master/share/dictionary/radius/dictionary.rfc2865#L11"
          },
          "User-Password": {
            "type": "string",
            "x-stoplight": {
              "id": "r5b93x9csz8r3"
            },
            "description": "The RFC2865 attribute to specify a user's password: https://github.com/FreeRADIUS/freeradius-server/blob/master/share/dictionary/radius/dictionary.rfc2865#L12",
            "example": "SuperSecret"
          },
          "Vendor-Specific": {
            "type": "object",
            "x-stoplight": {
              "id": "yencjwbaqr7ly"
            },
            "description": "Vendor-Specific attribute from RFC 2865: https://github.com/FreeRADIUS/freeradius-server/blob/master/share/dictionary/radius/dictionary.rfc2865#L36",
            "properties": {
              "Nokia-SR": {
                "type": "object",
                "x-stoplight": {
                  "id": "li2eyfpbqxrcf"
                },
                "description": "Vendor attribute: https://github.com/FreeRADIUS/freeradius-server/blob/master/share/dictionary/radius/dictionary.nokia.sr#L18",
                "properties": {
                  "SLA-Prof-Str": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "72pwsno0ykcim"
                    },
                    "description": "Attribute from the Nokia-SR dictionary (https://github.com/FreeRADIUS/freeradius-server/blob/master/share/dictionary/radius/dictionary.nokia.sr#L58)",
                    "example": "My-First-SLA-Profile"
                  }
                }
              }
            }
          },
          "EAP-Message": {
            "type": "array",
            "x-stoplight": {
              "id": "qfe0bmvuxe0px"
            },
            "description": "Raw EAP-Data: https://github.com/FreeRADIUS/freeradius-server/blob/0a6c82719dd7f5776b0ea11ba55000ec9937c5ad/share/dictionary/radius/dictionary.rfc2869#L25",
            "items": {
              "x-stoplight": {
                "id": "jsxy6t2eh801w"
              },
              "type": "string",
              "example": "0x01020304"
            }
          }
        },
        "examples": [
          {
            "User-Name": "bob",
            "User-Password": "SuperSecret",
            "Vendor-Specific": {
              "Nokia-SR": {
                "SLA-Prof-Str": "My-First-SLA-Profile"
              }
            },
            "EAP-Message": [
              "0x01020304"
            ]
          }
        ]
      },
      "RequestPacket": {
        "title": "RequestPacket",
        "x-stoplight": {
          "id": "mhzux416sobwr"
        },
        "type": "object",
        "properties": {
          "net": {
            "$ref": "#/components/schemas/PacketHeader",
            "x-stoplight": {
              "id": "aktre3rx0116h"
            },
            "description": "Where to send the request"
          },
          "attributes": {
            "$ref": "#/components/schemas/PacketAttributes",
            "x-stoplight": {
              "id": "q8eui2r7pa98d"
            },
            "description": "Attributes to send in the request"
          },
          "secret": {
            "type": "string",
            "x-stoplight": {
              "id": "se6r3d83bqyni"
            },
            "example": "testing123",
            "description": "An optional share-secret, for protocols like RADIUS, which require one"
          }
        },
        "description": "A request packet"
      },
      "ResponsePacket": {
        "title": "ResponsePacket",
        "x-stoplight": {
          "id": "gno4vspn9zvzw"
        },
        "type": "object",
        "description": "A response packet",
        "properties": {
          "net": {
            "$ref": "#/components/schemas/PacketHeader",
            "x-stoplight": {
              "id": "aktre3rx0116h"
            },
            "description": "IP header information from the response"
          },
          "attributes": {
            "$ref": "#/components/schemas/PacketAttributes",
            "x-stoplight": {
              "id": "q8eui2r7pa98d"
            },
            "description": "Attributes received in the response"
          }
        }
      },
      "ResponseError": {
        "title": "ResponseError",
        "x-stoplight": {
          "id": "0tx3kyrjsl26y"
        },
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "x-stoplight": {
              "id": "ks5mtp6v60n0g"
            },
            "format": "int32",
            "description": "A HTTP response code"
          },
          "message": {
            "type": "string",
            "x-stoplight": {
              "id": "hw83ssn3zv0cw"
            },
            "description": "A detailed description of the error"
          }
        }
      }
    },
    "parameters": {
      "protocol": {
        "name": "protocol",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "radius",
            "dhcpv4",
            "dhcpv6",
            "dns"
          ]
        }
      },
      "timeout": {
        "name": "timeout",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 100,
          "maximum": 10000,
          "example": 3000,
          "default": 3000
        },
        "description": "Timeout in milliseconds.  After this period any responses will be discarded, and the request will be marked as complete"
      },
      "synchronous": {
        "name": "synchronous",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": true
        },
        "description": "If true, the API server will not respond until a timeout occurs or a response is received, if false, the API server will respond with a request ID which can be used to retrieve the response via polling"
      }
    }
  }
}