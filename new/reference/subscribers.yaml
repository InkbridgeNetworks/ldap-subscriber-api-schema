openapi: 3.1.0
info:
  title: FreeRADIUS LDAP API
  version: '1.0'
  summary: An API for managing subscribers and attributes in LDAP
  description: A LUA API running in NGINX to abstract LDAP access
  contact:
    name: NetworkRADIUS support
    url: 'https://support.networkradius.com'
    email: support@networkradius.com
servers:
  - url: 'http://localhost:3000'
paths:
  '/realms/{realmid}/subscribers':
    parameters:
      - schema:
          type: string
        name: realmid
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/subscriber'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-realms-realm_id-subscribers
      description: Returns a list of subscribers for a given realm
  '/realms/{realmId}/subscribers/{subscriberId}':
    parameters:
      - schema:
          type: string
        name: realmId
        in: path
        required: true
        description: Realm the subscriber belongs to
      - schema:
          type: string
        name: subscriberId
        in: path
        required: true
        description: Subscriber identifier
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-realms-realm_id-subscribers-subscriber_id
      description: Retrieve a given subscriber object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriber'
        description: A single subscriber object
components:
  schemas:
    subscriber:
      title: subscriber
      type: object
      properties:
        id:
          type: string
          description: 'The id field for subscribers matches the LDAP RDN for the subscriber object. It is therefore made up of the username, the ‘+’ character and the service access media.  This cannot be changed.'
          example: 123456789+fixedLine
          readOnly: true
        subscriberId:
          type: string
          description: The unique identifier given to a subscriber.
          example: '123456789'
        serviceStatus:
          type: string
          enum:
            - enabled
            - disabled
        servicePrecedence:
          type: string
          enum:
            - primary
            - alternate
        serviceAccessMedia:
          type: string
          example: fixedLine
        serviceProfile:
          type: string
          format: uri-reference
          description: The URL for the associated subscriber profile
          example: 'http://1.2.3.4/service-profiles/fixedLine/profiles/INETG1M'
        clientGroup:
          type: string
          format: uri-reference
          example: 'http://1.2.3.4/client-groups/group1'
        subscriberGroup:
          type: string
          format: uri-reference
          example: 'http://1.2.3.4/subscriber-groups/groupA'
        portBinding:
          type: boolean
          description: Whether this subscriber should be bound to a particular port.
        portBindingIdentifier:
          type: string
          description: The port the subscriber is bound to.
          example: 'DSLAM03-D6-KTP atm 0/0/0/44:0.35'
        policy:
          $ref: ../models/policy.yaml
      required:
        - id
